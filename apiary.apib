HOST: http://api.1x.sk/

--- 1X public API ---
---
## Zabezpečení

Pro úspěšné volání funkce API je potřeba zaslat přidělené uživatelské jméno a heslo prostřednictvím HTTP Basic Auth.

## Požadavky

Požadavky se zasílají metodou POST na příslušné URL, informační zdroje jsou dotazovány metodou GET.

## Vyřizování požadavků

Systém každý přijatý požadavek ihned uloží a v odpovědi odešle přidělený unikátní identifikátor. Klient nečeká na odpověď o vyřízení a může odesílat další požadavky. Kdykoliv se pak může pomocí API volání dotázat na aktuální stav vyřizování požadavku. Převážně z tohoto důvodu jsou implementované odpovědi ve formátu JSON, kdy v klientské aplikaci je možné na pozadí např. pomocí JavaScriptu průběžně dotazovat server na stav vyřizování požadavků a tento v reálném čase v aplikaci zobrazovat. Tento způsob komunikace odstraňuje i problémy při nedostupnosti registrů nebo prodlevou v jejich odpovědích. Klienta zasílající požadavek neblokujeme a jeho požadavek zpracujeme, jakmile to bude možné.
---
--
Domains
Tato část popisuje práci s doménami
--

Detail domény

Parametry:

* __fqdnu__ - název domény s tečkou (.) nahrazenou podtržítkem (_)

GET /domains/{fqdnu}
> Accept: application/vnd.1x.common_v1+json
< 200
{"domains":[{
  "name":"1x.sk",
  "expires_on":"2011-08-28"}
]}

Služba pro ověření dostupnosti domény.

POST /domains/check
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[{"name":"novadomena.cz"}]}
< 202
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":null,
  "status":"processing",
  "request_type":"check"}
}

Služba pro registraci nového doménového jména.

Parametry:

* __name__ - jméno domény
* __registrant_handle__ - identifikátor kontaktu držitele
* __admins__ - administrativní kontakty domény
* __dns\_zone\_template_id__ - identifikátor šablony DNS záznamů (deleguje na náš NSSET)
* __nsset__ - identifikátor sady jmenných serverů (pouze pro cz domény)
* __nameserver\_1__ - jméno primárního jmenného serveru (pro ostatní domény)
* __nameserver\_2__ - jméno sekundárního jmenného serveru (pro ostatní domény)

POST /domains/register
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[
  {
    "name":"novadomena.cz",
    "registrant_handle":"DRZITEL",
    "dns_zone_template_id":"1",
    "admins": [
      {"id": "ADMIN1"},
      {"id": "ADMIN2"}
    ],
    "nsset":"KRAXNET"
  }
]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "dns_zone_template_id":"1",
    "registrant_handle":"DRZITEL"},
  "status":"processing",
  "request_type":"register"}
}

Služba pro změnu registrátora domény na 1X.

Parametry:

* __name__ - jméno domény
* __authorization_key__ - autorizační klíč pro převod domény

POST /domains/transfer
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[{"name":"novadomena.cz","authorization_key":"1234abcd"}]}
< 202
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "authorization_key":"1234abcd"},
  "status":"processing",
  "request_type":"transfer"}
}

Služba pro prodloužení registrace doménového jména.

Parametry:

* __name__ - jméno domény
* __current\_expiration\_date__ - datum expirace domény

POST /domains/renew
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[{"name":"novadomena.cz","current_expiration_date":"2011-01-01"}]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "current_expiration_date":"2011-01-01"},
  "status":"processing",
  "request_type":"renew"}
}

Služba pro redelegaci domény na jiné jmenné servery.

Parametry:

* __name__ - jméno domény
* __nsset__ - identifikátor sady jmenných serverů (pouze pro cz domény)
* __nameserver_1__ - jméno primárního jmenného serveru (pro ostatní domény)
* __nameserver_2__ - jméno sekundárního jmenného serveru (pro ostatní domény)

POST /domains/change_dns
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[{"name":"novadomena.cz","nsset":"KRAXNET"}]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "nsset":"KRAXNET"},
  "status":"processing",
  "request_type":"change_dns"}
}

Služba pro změnu držitele doménového jména.

Parametry:

* __name__ - jméno domény
* __registrant\_handle__ - identifikátor kontaktu nového držitele

POST /domains/registrant_change
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[{"name":"novadomena.cz","registrant_handle":"KRAXNET"}]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "registrant_handle":"NOVY_DRZITEL"},
  "status":"processing",
  "request_type":"registrant_change"}
}

Služba pro obecnou změnu údajů domény. Neslouží ke změně držitele domény.

Parametry:

* __name__ - jméno domény
* __admins__ - administrativní kontakty domény
* __nsset__ - identifikátor sady jmenných serverů (pouze pro cz domény)
* __nameserver_1__ - jméno primárního jmenného serveru (pro ostatní domény)
* __nameserver_2__ - jméno sekundárního jmenného serveru (pro ostatní domény)

POST /domains/update
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains":[
  {
    "name":"novadomena.cz",
    "admins": [
      {"id": "ADMIN1"},
      {"id": "ADMIN2"}
    ],
    "nsset":"KRAXNET"
  }
]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"novadomena.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "admins": [
      {"id": "ADMIN1"},
      {"id": "ADMIN2"}
    ],
    "nsset":"KRAXNET"},
  "status":"processing",
  "request_type":"update"}
}

Služba pro odpojení domény z účtu subregistrátora (zánik vztahu se zákazníkem).

Parametry:

* **name** - jméno domény

POST /domains/release
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"domains": [{ "name": "prvni.cz" }]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"prvni.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content": null
  "status":"processing",
  "request_type":"release"}
}


Služba pro získání seznamu všech domén.

GET /domains
< 200
{
  "domains":[
    {
      "name":"1x.sk",
      "expires_on":"2011-08-28"
    },
    {
      "name":"kraxnet.sk",
      "expires_on":"2011-08-28"
    }
  ]
}

Služba pro získání seznamu expirujících domén.

GET /domains/expiring
< 200
{
  "domains":[
    {
      "name":"1x.sk",
      "expires_on":"2011-08-28"
    },
    {
      "name":"kraxnet.sk",
      "expires_on":"2011-08-28"
    }
  ]
}

--
Contacts
Tato část popisuje práci s kontakty
--

Služba pro ověření dostupnosti kontaktu.

POST /contacts/check
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"contacts":[{"id":"FRANTA_DRZITEL"}]}
< 202
{"request":{
  "registry_object_name":"FRANTA_DRZITEL",
  "registry_object_type":"Contact",
  "id":1,
  "content":null,
  "status":"processing",
  "request_type":"check"}
}

Služba pro vytvoření nového kontaktu.

Parametry:

* __name__ - jméno a příjmení
* __organization__ - firma
* __email__ - email
* __address__ - ulice, číslo popisné
* __city__ - město
* __zip__ - poštovní směrovací číslo
* __state__ - region
* __country__ - stát
* __country\_code__ - kód státu
* __fax__ - fax
* __phone__ - telefon
* __ident\_type__ - typ identifikátoru (OP,Pas,MPSV,IC,Datum narození)
* __ident\_value__ - hodnota identifikátoru

POST /contacts/register
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"contacts":[
  {
    "email": "nejaky.email@seznam.cz",
    "name": "Miroslav Novák",
    "address": "Barevná 20",
    "city": "Prague"
  }
]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"DRZITEL",
  "registry_object_type":"Contact",
  "id":1,
  "content":{
    "email": "nejaky.email@seznam.cz",
    "name": "Miroslav Novák",
    "address": "Barevná 20",
    "city": "Prague"
    },
  "status":"processing",
  "request_type":"register"}
}

Služba pro změnu registrátora kontaktu na 1X.

Parametry:

* __id__ - identifikátor kontaktu
* __authorization_key__ - autorizační klíč pro převod konktatu

POST /contacts/transfer
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"contacts":[{"id":"FRANTA_DRZITEL","authorization_key":"1234abcd"}]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"FRANTA_DRZITEL",
  "registry_object_type":"Contact",
  "id":1,
  "content":{
    "authorization_key":"1234abcd"},
  "status":"processing",
  "request_type":"transfer"}
}

Služba pro změnu kontaktu.

Parametry:

* __id__ - identifikátor kontaktu

* __name__ - jméno a příjmení
* __organization__ - firma
* __email__ - email
* __address__ - ulice, číslo popisné
* __city__ - město
* __zip__ - poštovní směrovací číslo
* __state__ - region
* __country__ - stát
* __country\_code__ - kód státu
* __fax__ - fax
* __phone__ - telefon
* __ident\_type__ - typ identifikátoru (OP,Pas,MPSV,IC,Datum narození)
* __ident\_value__ - hodnota identifikátoru

POST /contacts/update
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"DRZITEL",
  "registry_object_type":"Contact",
  "id":1,
  "content":{
    "id":"DRZITEL",
    "address": "Hlinská 97",
    "city": "Zlín"
    },
  "status":"processing",
  "request_type":"update"}
}

Služba pro zrušení kontaktu, který není navázán na žádný objekt (doména, nsset, keyset).

Parametry:

* **id** - identifikátor kontaktu

POST /contacts/delete
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"nssets": [{ "id": "DRZITEL" }]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"DRZITEL",
  "registry_object_type":"Contact",
  "id":1,
  "content": null
  "status":"processing",
  "request_type":"delete"}
}


--
Nssets
Tato část popisuje práci s nssety
--

Služba pro ověření dostupnosti nssetu.

POST /nssets/check
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"nssets":[{"id":"NOVY-NSSET"}]}
< 202
{"request":{
  "registry_object_name":"NOVY-NSSET",
  "registry_object_type":"Nsset",
  "id":1,
  "content":null,
  "status":"processing",
  "request_type":"check"}
}


Služba pro vytvoření nového nssetu.

Parametry:

* __id__ - identifikátor nssetu
* __nameservers__ - výčet nameserverů
* __admins__ - identifikátory kontaktů oprávněných ke správě nssetu

POST /nssets/register
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{
  "nssets": [{
    "id": "NOVY-NSSET",
    "nameservers": [
        {"host": "ns.example.com"},
        {"host": "ns1.example.com"},
        {"host": "ns2.example.com"}
    ],
    "admins": [
        {"id": "ADMIN1"},
        {"id": "ADMIN2"}
    ]
  }]
}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"NOVY-NSSET",
  "registry_object_type":"Nsset",
  "id":1,
  "content":{
    "name": "NOVY-NSSET",
    "nameservers": [
        {"host": "ns.example.com"},
        {"host": "ns1.example.com"},
        {"host": "ns2.example.com"}
    ],
    "admins": [
        {"id": "ADMIN1"},
        {"id": "ADMIN2"}
    ]
    },
  "status":"processing",
  "request_type":"create"}
}

Služba pro aktualizaci nssetu.

Parametry:

* __id__ - identifikátor nssetu

* __nameservers__ - výčet nameserverů
* __admins__ - identifikátory kontaktů oprávněných ke správě nssetu

POST /nssets/update
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{
  "nssets": [{
    "id": "NOVY-NSSET",
    "nameservers": [
        {"host": "ns1.example.com"},
        {"host": "ns2.example.com"}
    ],
    "admins": [
        {"id": "ADMIN3"},
    ]
  }]
}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"NOVY-NSSET",
  "registry_object_type":"Nsset",
  "id":1,
  "content":{
    "id":"NOVY-NSSET",
    "nameservers": [
        {"host": "ns1.example.com"},
        {"host": "ns2.example.com"}
    ],
    "admins": [
        {"id": "ADMIN3"},
    ]
  },
  "status":"processing",
  "request_type":"update"}
}

Služba pro zrušení nssetu. Pouze pokud není navázán na doménu.

Parametry:

* **id** - identifikátor nssetu

POST /nssets/delete
> Content-Type: application/json
> Accept: application/vnd.1x.common_v1+json
{"nssets": [{ "id": "NOVY-NSSET" }]}
< 202
< Location: http://endpoint.1x/requests/1
< Content-Type: application/json
{"request":{
  "registry_object_name":"NOVY-NSSET",
  "registry_object_type":"Nsset",
  "id":1,
  "content": null,
  "status":"processing",
  "request_type":"delete"}
}

--
Requests
Tato část popisuje práci s odpověďmi na požadavky
--

Služba pro zjištění aktuálního stavu požadavku.

Parametry:

* **id** - identifikátor požadavku

Hodnoty odpovědi:

* **processing** - požadavek je ve zpracování
* **failed** - požadavek nebyl zpracován kvůli chybě
* **registered** - (pouze pro požadavek na registraci domény, kontaktu, nssetu) - objekt úspěšně zaregistrován
* **transferred** - (pouze pro požadavek na transfer domény, kontaktu, nssetu) - objekt úspěšně převedena
* **available** - (pouze pro požadavek na ověření dostupnosti domény, kontaktu, nssetu) - objekt je volný pro novou registraci
* **unavailable** - (pouze pro požadavek na ověření dostupnosti domény, kontaktu, nssetu) - objekt není volný
* **successful** - požadavek byl úspěšně zpracován

GET /requests/{id}/status
< 200
{"request":{
  "id":1,
  "status":"registered",
  "message":"Domain registered successfull"}
}

Služba pro získání všech odpovědí na zaslaný požadavek.

Parametry:

* **id** - identifikační číslo požadavku

GET /requests/{id}/responses
< 200
{
  "responses":[
    {
      "code":200,
      "id":1,
      "status":"Domain is available"
    }
  ]
}

Služba pro získání obsahu odeslaného požadavku.

Parametry:

* **id** - identifikátor požadavku

GET /requests/{id}
< 200
{"request":{
  "registry_object_name":"kubicek.cz",
  "registry_object_type":"Domain",
  "id":1,
  "content":{
    "dns_zone_template_id":"1",
    "registrant_handle":"KUBICEK"},
  "status":"processing",
  "request_type":"register"}
}

--
Account
Tato část popisuje práci se subregistrátorským účtem
--

Zjištění aktuálního stavu kreditu.

GET /account/balance
< 200
{"balance":{
  "currency":"CZK",
  "amount":"200.00"}
}
